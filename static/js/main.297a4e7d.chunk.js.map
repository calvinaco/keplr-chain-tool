{"version":3,"sources":["keplr/lib.ts","AddChainButton.tsx","chain/cronostestnet_338-2.ts","chain/testnet-croeseid-4.ts","AddChainForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["addChainToKeplr","network","a","window","getOfflineSigner","keplr","Error","experimentalSuggestChain","toString","AddChainButton","props","handleClick","message","error","className","onClick","chainName","chainId","Cronostestnet_338_2","rpc","rest","stakeCurrency","coinDenom","coinMinimalDenom","coinDecimals","bip44","coinType","bech32Config","bech32PrefixAccAddr","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","feeCurrencies","gasPriceStep","low","average","high","Testnet_Croeseid_4","constructKeplrChainConfig","values","stakeCurrencyCoinDenom","stakeCurrencyCoinMinimalDenom","stakeCurrencyCoinDecimals","bech32AccAddr","bech32AccPub","bech32ValPub","bech32ConsPub","currenciesCoinDenom","currenciesCoinMinimalDenom","currenciesCoinDecimals","feeCurrenciesCoinDenom","feeCurrenciesCoinMinimalDenom","feeCurrenciesCoinDecimals","gasPriceStepLow","gasPriceStepAverage","gasPriceStepHigh","AddChainForm","handleFinish","console","log","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","autoComplete","Item","label","rules","required","max","defaultValue","type","htmlType","App","backIcon","title","subTitle","href","mode","icon","AppstoreOutlined","SettingOutlined","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.297a4e7d.chunk.js","sourcesContent":["import { KeplrChainConfig } from \"./types\";\n\ndeclare global {\n  interface Window {\n    getOfflineSigner?: any;\n    keplr?: {\n      experimentalSuggestChain: (config: KeplrChainConfig) => Promise<any>\n    };\n  }\n}\n\nexport const addChainToKeplr = async (\n  network: KeplrChainConfig\n): Promise<boolean> => {\n  if (!window.getOfflineSigner || !window.keplr) {\n    throw new Error('Keplr is not installed');\n  } else {\n    if (window.keplr.experimentalSuggestChain) {\n      try {\n        // Keplr v0.6.4 introduces an experimental feature that supports the feature to suggests the chain from a webpage.\n        // cosmoshub-3 is integrated to Keplr so the code should return without errors.\n        // The code below is not needed for cosmoshub-3, but may be helpful if youâ€™re adding a custom chain.\n        // If the user approves, the chain will be added to the user's Keplr extension.\n        // If the user rejects it or the suggested chain information doesn't include the required fields, it will throw an error.\n        // If the same chain id is already registered, it will resolve and not require the user interactions.\n        await window.keplr.experimentalSuggestChain(network);\n      } catch(err: any) {\n        throw new Error(`Failed to suggest network to Keplr: ${err.toString()}`);\n      }\n    } else {\n      throw new Error('Keplr does not support adding custom network. Please update to the latest version.');\n    }\n\n    return true;\n  }\n};\n","import React from \"react\";\nimport { message, Button } from \"antd\";\nimport \"./AddChainButton.css\"\nimport { KeplrChainConfig } from \"./keplr/types\";\nimport { addChainToKeplr } from \"./keplr/lib\";\n\nfunction AddChainButton(props: Props) {\n  const handleClick = async () => {\n    try {\n      await addChainToKeplr(props.network);\n    } catch(err: any) {\n      message.error(err.toString());\n    }\n  }\n\n  return <Button className=\"Button\" onClick={handleClick}>{props.network?.chainName} ({props.network?.chainId})</Button>;\n}\n\nexport type Props = {\n  network: KeplrChainConfig;\n};\n\nexport default AddChainButton;\n","import { KeplrChainConfig } from \"../keplr/types\";\n\nexport const Cronostestnet_338_2: KeplrChainConfig = {\n\t// Chain-id of the Cosmos SDK chain.\n\tchainId: \"cronostestnet_338-2\",\n\t// The name of the chain to be displayed to the user.\n\tchainName: \"Cronos Testnet 2\",\n\t// RPC endpoint of the chain.\n\trpc: \"https://cronos-testnet.crypto.org:26657\",\n\t// REST endpoint of the chain.\n\trest: \"https://cronos-testnet.crypto.org:1317\",\n\t// Staking coin information\n\tstakeCurrency: {\n    // Coin denomination to be displayed to the user.\n    coinDenom: \"TCRO\",\n    // Actual denom (i.e. uatom, uscrt) used by the blockchain.\n    coinMinimalDenom: \"basetcro\",\n    // # of decimal points to convert minimal denomination to user-facing denomination.\n    coinDecimals: 18,\n    // (Optional) Keplr can show the fiat value of the coin if a coingecko id is provided.\n    // You can get id from https://api.coingecko.com/api/v3/coins/list if it is listed.\n    // coinGeckoId: \"\"\n\t},\n\t// (Optional) If you have a wallet webpage used to stake the coin then provide the url to the website in `walletUrlForStaking`.\n\t// The 'stake' button in Keplr extension will link to the webpage.\n\t// walletUrlForStaking: \"\",\n\t// The BIP44 path.\n\tbip44: {\n    // You can only set the coin type of BIP44.\n    // 'Purpose' is fixed to 44.\n    coinType: 60,\n\t},\n\t// Bech32 configuration to show the address to user.\n\t// This field is the interface of\n\t// {\n\t//   bech32PrefixAccAddr: string;\n\t//   bech32PrefixAccPub: string;\n\t//   bech32PrefixValAddr: string;\n\t//   bech32PrefixValPub: string;\n\t//   bech32PrefixConsAddr: string;\n\t//   bech32PrefixConsPub: string;\n\t// }\n\tbech32Config: {\n    bech32PrefixAccAddr: \"tcrc\",\n    bech32PrefixAccPub: \"tcrcpub\",\n    bech32PrefixValAddr: \"tcrcvaloper\",\n    bech32PrefixValPub: \"tcrcvaloperpub\",\n    bech32PrefixConsAddr: \"tcrcvalcons\",\n    bech32PrefixConsPub: \"tcrcvalconspub\"\n\t},\n\t// List of all coin/tokens used in this chain.\n\tcurrencies: [{\n    // Coin denomination to be displayed to the user.\n    coinDenom: \"TCRO\",\n    // Actual denom (i.e. uatom, uscrt) used by the blockchain.\n    coinMinimalDenom: \"basetcro\",\n    // # of decimal points to convert minimal denomination to user-facing denomination.\n    coinDecimals: 18,\n    // (Optional) Keplr can show the fiat value of the coin if a coingecko id is provided.\n    // You can get id from https://api.coingecko.com/api/v3/coins/list if it is listed.\n    // coinGeckoId: \"\"\n\t}],\n\t// List of coin/tokens used as a fee token in this chain.\n\tfeeCurrencies: [{\n    // Coin denomination to be displayed to the user.\n    coinDenom: \"TCRO\",\n    // Actual denom (i.e. uatom, uscrt) used by the blockchain.\n    coinMinimalDenom: \"basetcro\",\n    // # of decimal points to convert minimal denomination to user-facing denomination.\n    coinDecimals: 18,\n    // (Optional) Keplr can show the fiat value of the coin if a coingecko id is provided.\n    // You can get id from https://api.coingecko.com/api/v3/coins/list if it is listed.\n    // coinGeckoId: \"\"\n\t}],\n\t// (Optional) The number of the coin type.\n\t// This field is only used to fetch the address from ENS.\n\t// Ideally, it is recommended to be the same with BIP44 path's coin type.\n\t// However, some early chains may choose to use the Cosmos Hub BIP44 path of '118'.\n\t// So, this is separated to support such chains.\n\tcoinType: 60,\n\t// (Optional) This is used to set the fee of the transaction.\n\t// If this field is not provided, Keplr extension will set the default gas price as (low: 0.01, average: 0.025, high: 0.04).\n\t// Currently, Keplr doesn't support dynamic calculation of the gas prices based on on-chain data.\n\t// Make sure that the gas prices are higher than the minimum gas prices accepted by chain validators and RPC/REST endpoint.\n\tgasPriceStep: {\n    low: 5000000000000,\n    average: 5000000000000,\n    high: 5000000000000,\n\t}\n}","import { KeplrChainConfig } from \"../keplr/types\";\n\nexport const Testnet_Croeseid_4: KeplrChainConfig = {\n  // Chain-id of the Cosmos SDK chain.\n  chainId: \"testnet-croeseid-4\",\n  // The name of the chain to be displayed to the user.\n  chainName: \"Crypto.org Chain Croeseid-4\",\n  // RPC endpoint of the chain.\n  rpc: \"https://testnet-croeseid-4.crypto.org:26657\",\n  // REST endpoint of the chain.\n  rest: \"https://testnet-croeseid-4.crypto.org:1317\",\n  // Staking coin information\n  stakeCurrency: {\n    // Coin denomination to be displayed to the user.\n    coinDenom: \"TCRO\",\n    // Actual denom (i.e. uatom, uscrt) used by the blockchain.\n    coinMinimalDenom: \"basetcro\",\n    // # of decimal points to convert minimal denomination to user-facing denomination.\n    coinDecimals: 8,\n    // (Optional) Keplr can show the fiat value of the coin if a coingecko id is provided.\n    // You can get id from https://api.coingecko.com/api/v3/coins/list if it is listed.\n    // coinGeckoId: \"\"\n  },\n  // (Optional) If you have a wallet webpage used to stake the coin then provide the url to the website in `walletUrlForStaking`.\n  // The 'stake' button in Keplr extension will link to the webpage.\n  // walletUrlForStaking: \"\",\n  // The BIP44 path.\n  bip44: {\n    // You can only set the coin type of BIP44.\n    // 'Purpose' is fixed to 44.\n    coinType: 1,\n  },\n  // Bech32 configuration to show the address to user.\n  // This field is the interface of\n  // {\n  //   bech32PrefixAccAddr: string;\n  //   bech32PrefixAccPub: string;\n  //   bech32PrefixValAddr: string;\n  //   bech32PrefixValPub: string;\n  //   bech32PrefixConsAddr: string;\n  //   bech32PrefixConsPub: string;\n  // }\n  bech32Config: {\n    bech32PrefixAccAddr: \"tcro\",\n    bech32PrefixAccPub: \"tcropub\",\n    bech32PrefixValAddr: \"tcrocncl\",\n    bech32PrefixValPub: \"tcrocnclpub\",\n    bech32PrefixConsAddr: \"tcrocnclcons\",\n    bech32PrefixConsPub: \"tcrocnclconspub\",\n  },\n  // List of all coin/tokens used in this chain.\n  currencies: [\n    {\n      // Coin denomination to be displayed to the user.\n      coinDenom: \"TCRO\",\n      // Actual denom (i.e. uatom, uscrt) used by the blockchain.\n      coinMinimalDenom: \"basetcro\",\n      // # of decimal points to convert minimal denomination to user-facing denomination.\n      coinDecimals: 8,\n      // (Optional) Keplr can show the fiat value of the coin if a coingecko id is provided.\n      // You can get id from https://api.coingecko.com/api/v3/coins/list if it is listed.\n      // coinGeckoId: \"\"\n    },\n  ],\n  // List of coin/tokens used as a fee token in this chain.\n  feeCurrencies: [\n    {\n      // Coin denomination to be displayed to the user.\n      coinDenom: \"TCRO\",\n      // Actual denom (i.e. uatom, uscrt) used by the blockchain.\n      coinMinimalDenom: \"basetcro\",\n      // # of decimal points to convert minimal denomination to user-facing denomination.\n      coinDecimals: 8,\n      // (Optional) Keplr can show the fiat value of the coin if a coingecko id is provided.\n      // You can get id from https://api.coingecko.com/api/v3/coins/list if it is listed.\n      // coinGeckoId: \"\"\n    },\n  ],\n  // (Optional) The number of the coin type.\n  // This field is only used to fetch the address from ENS.\n  // Ideally, it is recommended to be the same with BIP44 path's coin type.\n  // However, some early chains may choose to use the Cosmos Hub BIP44 path of '118'.\n  // So, this is separated to support such chains.\n  coinType: 1,\n  // (Optional) This is used to set the fee of the transaction.\n  // If this field is not provided, Keplr extension will set the default gas price as (low: 0.01, average: 0.025, high: 0.04).\n  // Currently, Keplr doesn't support dynamic calculation of the gas prices based on on-chain data.\n  // Make sure that the gas prices are higher than the minimum gas prices accepted by chain validators and RPC/REST endpoint.\n  gasPriceStep: {\n    low: 0.025,\n    average: 0.025,\n    high: 0.025,\n  },\n};\n","import React from \"react\";\nimport { message, Button, Form, Input, InputNumber } from \"antd\";\nimport \"./AddChainForm.css\";\nimport { KeplrChainConfig } from \"./keplr/types\";\nimport { addChainToKeplr } from \"./keplr/lib\";\n\nfunction AddChainForm() {\n  const handleFinish = async (values: any) => {\n    console.log(values);\n    const network: KeplrChainConfig = constructKeplrChainConfig(values);\n    console.log(network);\n    try {\n      await addChainToKeplr(network);\n    } catch (err: any) {\n      message.error(err.toString());\n    }\n  };\n\n  return (\n    <Form\n      name=\"basic\"\n      labelCol={{ span: 6 }}\n      wrapperCol={{ span: 18 }}\n      initialValues={{ remember: true }}\n      onFinish={handleFinish}\n      autoComplete=\"off\"\n    >\n      <Form.Item\n        label=\"Chain ID\"\n        name=\"chainId\"\n        rules={[{ required: true }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Chain Name\"\n        name=\"chainName\"\n        rules={[{ required: true, max: 30 }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Tendermint RPC\"\n        name=\"rpc\"\n        rules={[{ required: true }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Cosmos REST\"\n        name=\"rest\"\n        rules={[{ required: true }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Stake Currency\"\n      >\n        <Form.Item\n          label=\"Denom\"\n          name=\"stakeCurrencyCoinDenom\"\n          rules={[{ required: true }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Minimum Denom\"\n          name=\"stakeCurrencyCoinMinimalDenom\"\n          rules={[{ required: true }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Decimals\"\n          name=\"stakeCurrencyCoinDecimals\"\n          rules={[{ required: true }]}\n        >\n          <InputNumber />\n        </Form.Item>\n      </Form.Item>\n\n      <Form.Item\n        label=\"Currency\"\n      >\n        <Form.Item\n          label=\"Denom\"\n          name=\"currenciesCoinDenom\"\n          rules={[{ required: true }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Minimum Denom\"\n          name=\"currenciesCoinMinimalDenom\"\n          rules={[{ required: true }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Decimals\"\n          name=\"currenciesCoinDecimals\"\n          rules={[{ required: true }]}\n        >\n          <InputNumber />\n        </Form.Item>\n      </Form.Item>\n\n      <Form.Item\n        label=\"Fee Currency\"\n      >\n        <Form.Item\n          label=\"Denom\"\n          name=\"feeCurrenciesCoinDenom\"\n          rules={[{ required: true }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Minimum Denom\"\n          name=\"feeCurrenciesCoinMinimalDenom\"\n          rules={[{ required: true }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Decimals\"\n          name=\"feeCurrenciesCoinDecimals\"\n          rules={[{ required: true }]}\n        >\n          <InputNumber />\n        </Form.Item>\n      </Form.Item>\n\n      <Form.Item\n        label=\"Bech32 Prefix\"\n      >\n        <Form.Item\n          label=\"Account Address\"\n          name=\"bech32AccAddr\"\n          rules={[{ required: true }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Account PubKey\"\n          name=\"bech32AccPub\"\n          rules={[{ required: true }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Validator Address\"\n          name=\"bech32ValAddr\"\n          rules={[{ required: true }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Validator PubKey\"\n          name=\"bech32ValPub\"\n          rules={[{ required: true }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Consensus Address\"\n          name=\"bech32ConsAddr\"\n          rules={[{ required: true }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          label=\"Consensus PubKey\"\n          name=\"bech32ConsPub\"\n          rules={[{ required: true }]}\n        >\n          <Input />\n        </Form.Item>\n      </Form.Item>\n\n      <Form.Item\n        label=\"Coin Type\"\n        name=\"coinType\"\n        rules={[{ required: true }]}\n      >\n        <InputNumber />\n      </Form.Item>\n\n      <Form.Item\n        label=\"Gas Price Step\"\n      >\n        <Form.Item\n          label=\"Low\"\n          name=\"gasPriceStepLow\"\n          rules={[{ required: true }]}\n        >\n          <InputNumber defaultValue={0.01} />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Average\"\n          name=\"gasPriceStepAverage\"\n          rules={[{ required: true }]}\n        >\n          <InputNumber defaultValue={0.025} />\n        </Form.Item>\n\n        <Form.Item\n          label=\"High\"\n          name=\"gasPriceStepHigh\"\n          rules={[{ required: true }]}\n        >\n          <InputNumber defaultValue={0.04} />\n        </Form.Item>\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Add Chain\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nfunction constructKeplrChainConfig(values: any): KeplrChainConfig {\n  return {\n    // Chain-id of the Cosmos SDK chain.\n    chainId: values.chainId,\n    // The name of the chain to be displayed to the user.\n    chainName: values.chainName,\n    // RPC endpoint of the chain.\n    rpc: values.rpc,\n    // REST endpoint of the chain.\n    rest: values.rest,\n    // Staking coin information\n    stakeCurrency: {\n      // Coin denomination to be displayed to the user.\n      coinDenom: values.stakeCurrencyCoinDenom,\n      // Actual denom (i.e. uatom, uscrt) used by the blockchain.\n      coinMinimalDenom: values.stakeCurrencyCoinMinimalDenom,\n      // # of decimal points to convert minimal denomination to user-facing denomination.\n      coinDecimals: values.stakeCurrencyCoinDecimals,\n      // (Optional) Keplr can show the fiat value of the coin if a coingecko id is provided.\n      // You can get id from https://api.coingecko.com/api/v3/coins/list if it is listed.\n      // coinGeckoId: \"\"\n    },\n    // (Optional) If you have a wallet webpage used to stake the coin then provide the url to the website in `walletUrlForStaking`.\n    // The 'stake' button in Keplr extension will link to the webpage.\n    // walletUrlForStaking: \"\",\n    // The BIP44 path.\n    bip44: {\n      // You can only set the coin type of BIP44.\n      // 'Purpose' is fixed to 44.\n      coinType: values.coinType,\n    },\n    // Bech32 configuration to show the address to user.\n    // This field is the interface of\n    // {\n    //   bech32PrefixAccAddr: string;\n    //   bech32PrefixAccPub: string;\n    //   bech32PrefixValAddr: string;\n    //   bech32PrefixValPub: string;\n    //   bech32PrefixConsAddr: string;\n    //   bech32PrefixConsPub: string;\n    // }\n    bech32Config: {\n      bech32PrefixAccAddr: values.bech32AccAddr,\n      bech32PrefixAccPub: values.bech32AccPub,\n      bech32PrefixValAddr: values.bech32ValPub,\n      bech32PrefixValPub: values.bech32ValPub,\n      bech32PrefixConsAddr: values.bech32ConsPub,\n      bech32PrefixConsPub: values.bech32ConsPub,\n    },\n    // List of all coin/tokens used in this chain.\n    currencies: [\n      {\n        // Coin denomination to be displayed to the user.\n        coinDenom: values.currenciesCoinDenom,\n        // Actual denom (i.e. uatom, uscrt) used by the blockchain.\n        coinMinimalDenom: values.currenciesCoinMinimalDenom,\n        // # of decimal points to convert minimal denomination to user-facing denomination.\n        coinDecimals: values.currenciesCoinDecimals,\n        // (Optional) Keplr can show the fiat value of the coin if a coingecko id is provided.\n        // You can get id from https://api.coingecko.com/api/v3/coins/list if it is listed.\n        // coinGeckoId: \"\"\n      },\n    ],\n    // List of coin/tokens used as a fee token in this chain.\n    feeCurrencies: [\n      {\n        // Coin denomination to be displayed to the user.\n        coinDenom: values.feeCurrenciesCoinDenom,\n        // Actual denom (i.e. uatom, uscrt) used by the blockchain.\n        coinMinimalDenom: values.feeCurrenciesCoinMinimalDenom,\n        // # of decimal points to convert minimal denomination to user-facing denomination.\n        coinDecimals: values.feeCurrenciesCoinDecimals,\n        // (Optional) Keplr can show the fiat value of the coin if a coingecko id is provided.\n        // You can get id from https://api.coingecko.com/api/v3/coins/list if it is listed.\n        // coinGeckoId: \"\"\n      },\n    ],\n    // (Optional) The number of the coin type.\n    // This field is only used to fetch the address from ENS.\n    // Ideally, it is recommended to be the same with BIP44 path's coin type.\n    // However, some early chains may choose to use the Cosmos Hub BIP44 path of '118'.\n    // So, this is separated to support such chains.\n    coinType: values.coinType,\n    // (Optional) This is used to set the fee of the transaction.\n    // If this field is not provided, Keplr extension will set the default gas price as (low: 0.01, average: 0.025, high: 0.04).\n    // Currently, Keplr doesn't support dynamic calculation of the gas prices based on on-chain data.\n    // Make sure that the gas prices are higher than the minimum gas prices accepted by chain validators and RPC/REST endpoint.\n    gasPriceStep: {\n      low: values.gasPriceStepLow,\n      average: values.gasPriceStepAverage,\n      high: values.gasPriceStepHigh,\n    },\n  };\n}\n\nexport default AddChainForm;\n","import React from 'react';\nimport { Menu, PageHeader } from 'antd';\nimport { AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\nimport './App.css';\nimport AddChainButton from './AddChainButton';\nimport { Cronostestnet_338_2 } from './chain/cronostestnet_338-2';\nimport { Testnet_Croeseid_4 } from './chain/testnet-croeseid-4';\nimport AddChainForm from './AddChainForm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PageHeader\n        backIcon={false}\n        title=\"Keplr Chain Tool\"\n        subTitle=\"Add chain to Keplr at ease\"\n      / >\n      <a className=\"GitHubLink\" href=\"https://github.com/calvinaco/keplr-chain-tool\">https://github.com/calvinaco/keplr-chain-tool</a>\n\n      <Menu mode=\"horizontal\">\n        <Menu.Item key=\"quickAdd\" icon={<AppstoreOutlined />}>\n          <a href=\"#QuickAdd\">Quick Add Chains</a>\n        </Menu.Item>\n        <Menu.Item key=\"customChain\" icon={<SettingOutlined />}>\n          <a href=\"#CustomChain\">Custom Chain</a>\n        </Menu.Item>\n      </Menu>\n      <section id=\"QuickAdd\">\n        <PageHeader\n          backIcon={false}\n          title=\"Quick Add Chains\"\n        / >\n        <ul className=\"ChainList\">\n          <li><AddChainButton network={Cronostestnet_338_2} /></li>\n          <li><AddChainButton network={Testnet_Croeseid_4} /></li>\n        </ul> \n      </section>\n      <section id=\"CustomChain\">\n        <PageHeader\n          backIcon={false}\n          title=\"Custom Chain\"\n        / >\n        <AddChainForm />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}